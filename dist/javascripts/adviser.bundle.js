!function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s="./client/scripts/adviser/index.js")}({"./client/scripts/ProgressBar.js":
/*!***************************************!*\
  !*** ./client/scripts/ProgressBar.js ***!
  \***************************************/
/*! no static exports found */function(e,t,r){"use strict";var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}();var i=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return n(e,[{key:"showLoading",value:function(){var e=this;this.loadingElem=this._createLoading(),this.loadingInterval=setInterval(function(){e._progress()},1e3)}},{key:"hideLoading",value:function(){clearInterval(this.loadingInterval),this.loadingElem.style.width="100%",setTimeout(this._distructLoading,500)}},{key:"_createLoading",value:function(){var e=document.createElement("div");return e.setAttribute("id","nprogress"),e.style.width="0%",document.body.appendChild(e),e}},{key:"_distructLoading",value:function(){document.body.removeChild(document.querySelector("#nprogress"))}},{key:"_progress",value:function(){parseInt(this.loadingElem.style.width)>=95?clearInterval(this.loadingInterval):this.loadingElem.style.width=parseInt(this.loadingElem.style.width)+5+"%"}}]),e}();e.exports=i},"./client/scripts/adviser/Adviser.js":
/*!*******************************************!*\
  !*** ./client/scripts/adviser/Adviser.js ***!
  \*******************************************/
/*! no static exports found */function(e,t,r){"use strict";var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}();var i=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.initEvents(),this.reprepareQuestionsDesign(),this.redesignQuestions()}return n(e,[{key:"reprepareQuestionsDesign",value:function(){var e=document.querySelectorAll(".questionWrapper"),t=0,r=!0,n=!1,i=void 0;try{for(var s,o=e[Symbol.iterator]();!(r=(s=o.next()).done);r=!0){var a=s.value;if(/active/i.test(a.classList))break;t+=a.offsetHeight}}catch(e){n=!0,i=e}finally{try{!r&&o.return&&o.return()}finally{if(n)throw i}}(t+=$$(".questionWrapper.active").offsetHeight/2)<$$(".chooserWrapper").offsetHeight?$$(".chooserSliderWrapper").style.transform="translateY("+($$(".chooserWrapper").offsetHeight/2-t)+"px)":$$(".chooserSliderWrapper").style.transform="translateY("+t+"px)"}},{key:"initEvents",value:function(){var e=this;$$(".startBtn").onclick=function(){$$(".startBtn").setAttribute("data-started",!0),$$(".startBtn").querySelector("span").textContent="Start Over",$$(".startBtn").style.width="50%",$$(".startWrapper").onclick=function(){e.reset()},$$(".chooserWrapper").style.transform="translateX(0px) translateZ(0px)",$$(".startWrapper").style.transform="rotateY(45deg) translateZ(-500px)";var t=e;document.querySelectorAll(".questionWrapper").forEach(function(e){e.onclick=function(){$$(".questionWrapper.active").classList.remove("active"),this.classList.add("active"),t.reprepareQuestionsDesign(),t.redesignQuestions()}}),document.querySelectorAll(".option").forEach(function(e){e.onclick=function(e){e.stopPropagation(),this.parentNode.querySelector(".option.active").classList.remove("active"),this.classList.add("active");var r=$$(".questionWrapper.active");r.nextElementSibling&&(r.classList.remove("active"),r.nextElementSibling.classList.add("active"),t.reprepareQuestionsDesign(),t.redesignQuestions())}})}}},{key:"redesignQuestions",value:function(){for(var e=$$(".questionWrapper.active"),t=e,r=0;t;r++)t.style.transform="scale("+(1-.1*r)+")",t=t.previousElementSibling;t=e;for(var n=0;t;n++)t.style.transform="scale("+(1-.2*n)+")",t=t.nextElementSibling}},{key:"reset",value:function(){document.querySelectorAll(".questionWrapper").forEach(function(e){e.querySelector(".option.active").classList.remove("active"),e.querySelector('.option[data-value="3"]').classList.add("active")}),$$(".questionWrapper.active").classList.remove("active"),$$(".questionWrapper:first-of-type").classList.add("active"),this.reprepareQuestionsDesign(),this.redesignQuestions()}}]),e}();e.exports=i},"./client/scripts/adviser/index.js":
/*!*****************************************!*\
  !*** ./client/scripts/adviser/index.js ***!
  \*****************************************/
/*! no static exports found */function(e,t,r){"use strict";window.$$=function(e){return document.querySelector(e)};var n=r(/*! ../ProgressBar */"./client/scripts/ProgressBar.js"),i=r(/*! ./Adviser */"./client/scripts/adviser/Adviser.js"),s=new n;new i;s.showLoading(),document.addEventListener("pjax:start",function(){s.showLoading()}),document.addEventListener("pjax:end",function(){s.hideLoading()}),window.onload=function(){s.hideLoading()}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vY2xpZW50L3NjcmlwdHMvUHJvZ3Jlc3NCYXIuanMiLCJ3ZWJwYWNrOi8vLy4vY2xpZW50L3NjcmlwdHMvYWR2aXNlci9BZHZpc2VyLmpzIiwid2VicGFjazovLy8uL2NsaWVudC9zY3JpcHRzL2FkdmlzZXIvaW5kZXguanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwidmFsdWUiLCJuIiwiX19lc01vZHVsZSIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsIkxvYWRpbmciLCJfdGhpcyIsInRoaXMiLCJsb2FkaW5nRWxlbSIsIl9jcmVhdGVMb2FkaW5nIiwibG9hZGluZ0ludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJfcHJvZ3Jlc3MiLCJjbGVhckludGVydmFsIiwic3R5bGUiLCJ3aWR0aCIsInNldFRpbWVvdXQiLCJfZGlzdHJ1Y3RMb2FkaW5nIiwiZGl2IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwiYm9keSIsImFwcGVuZENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJxdWVyeVNlbGVjdG9yIiwicGFyc2VJbnQiLCJBZHZpY2UiLCJfY2xhc3NDYWxsQ2hlY2siLCJpbml0RXZlbnRzIiwicmVwcmVwYXJlUXVlc3Rpb25zRGVzaWduIiwicmVkZXNpZ25RdWVzdGlvbnMiLCJxdWVzdGlvbnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiaGVpZ2h0IiwiX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiIsIl9kaWRJdGVyYXRvckVycm9yIiwiX2l0ZXJhdG9yRXJyb3IiLCJ1bmRlZmluZWQiLCJfc3RlcCIsIl9pdGVyYXRvciIsIlN5bWJvbCIsIml0ZXJhdG9yIiwibmV4dCIsImRvbmUiLCJxdWVzdGlvbiIsInRlc3QiLCJjbGFzc0xpc3QiLCJvZmZzZXRIZWlnaHQiLCJlcnIiLCJyZXR1cm4iLCIkJCIsInRyYW5zZm9ybSIsIm9uY2xpY2siLCJ0ZXh0Q29udGVudCIsInJlc2V0IiwidGhhdCIsImZvckVhY2giLCJlbGVtIiwicmVtb3ZlIiwiYWRkIiwiZSIsInN0b3BQcm9wYWdhdGlvbiIsInBhcmVudE5vZGUiLCJhY3RpdmVFbGVtIiwibmV4dEVsZW1lbnRTaWJsaW5nIiwiYWN0aXZlUXVlc3Rpb24iLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwid2luZG93Iiwic2VsZWN0b3IiLCJQcm9ncmVzc0JhciIsIkFkdmlzZXIiLCJsb2FkaW5nIiwic2hvd0xvYWRpbmciLCJhZGRFdmVudExpc3RlbmVyIiwiaGlkZUxvYWRpbmciLCJvbmxvYWQiXSwibWFwcGluZ3MiOiJhQUNBLElBQUFBLEtBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsSUFDQUcsRUFBQUgsRUFDQUksR0FBQSxFQUNBSCxZQVVBLE9BTkFJLEVBQUFMLEdBQUFNLEtBQUFKLEVBQUFELFFBQUFDLElBQUFELFFBQUFGLEdBR0FHLEVBQUFFLEdBQUEsRUFHQUYsRUFBQUQsUUFLQUYsRUFBQVEsRUFBQUYsRUFHQU4sRUFBQVMsRUFBQVYsRUFHQUMsRUFBQVUsRUFBQSxTQUFBUixFQUFBUyxFQUFBQyxHQUNBWixFQUFBYSxFQUFBWCxFQUFBUyxJQUNBRyxPQUFBQyxlQUFBYixFQUFBUyxHQUNBSyxjQUFBLEVBQ0FDLFlBQUEsRUFDQUMsSUFBQU4sS0FNQVosRUFBQW1CLEVBQUEsU0FBQWpCLEdBQ0FZLE9BQUFDLGVBQUFiLEVBQUEsY0FBaURrQixPQUFBLEtBSWpEcEIsRUFBQXFCLEVBQUEsU0FBQWxCLEdBQ0EsSUFBQVMsRUFBQVQsS0FBQW1CLFdBQ0EsV0FBMkIsT0FBQW5CLEVBQUEsU0FDM0IsV0FBaUMsT0FBQUEsR0FFakMsT0FEQUgsRUFBQVUsRUFBQUUsRUFBQSxJQUFBQSxHQUNBQSxHQUlBWixFQUFBYSxFQUFBLFNBQUFVLEVBQUFDLEdBQXNELE9BQUFWLE9BQUFXLFVBQUFDLGVBQUFuQixLQUFBZ0IsRUFBQUMsSUFHdER4QixFQUFBMkIsRUFBQSxHQUlBM0IsSUFBQTRCLEVBQUE7Ozs7d1RDbkVNQyxnTEFFVyxJQUFBQyxFQUFBQyxLQUVUQSxLQUFLQyxZQUFjRCxLQUFLRSxpQkFFeEJGLEtBQUtHLGdCQUFrQkMsWUFBWSxXQUMvQkwsRUFBS00sYUFDUCwyQ0FNRkMsY0FBY04sS0FBS0csaUJBRW5CSCxLQUFLQyxZQUFZTSxNQUFNQyxNQUFRLE9BRS9CQyxXQUFXVCxLQUFLVSxpQkFBaUIsOENBTWpDLElBQUlDLEVBQU1DLFNBQVNDLGNBQWMsT0FJakMsT0FIQUYsRUFBSUcsYUFBYSxLQUFLLGFBQ3RCSCxFQUFJSixNQUFNQyxNQUFRLEtBQ2xCSSxTQUFTRyxLQUFLQyxZQUFZTCxHQUNuQkEsNkNBSVBDLFNBQVNHLEtBQUtFLFlBQVlMLFNBQVNNLGNBQWMsbURBSTlDQyxTQUFTbkIsS0FBS0MsWUFBWU0sTUFBTUMsUUFBVSxHQUN6Q0YsY0FBY04sS0FBS0csaUJBRW5CSCxLQUFLQyxZQUFZTSxNQUFNQyxNQUFRVyxTQUFTbkIsS0FBS0MsWUFBWU0sTUFBTUMsT0FBUyxFQUFJLGFBTXhGcEMsRUFBT0QsUUFBVTJCOzs7O3dUQzdDWHNCLGFBRUYsU0FBQUEsaUdBQWNDLENBQUFyQixLQUFBb0IsR0FDVnBCLEtBQUtzQixhQUNMdEIsS0FBS3VCLDJCQUNMdkIsS0FBS3dCLGlGQVVMLElBQUlDLEVBQVliLFNBQVNjLGlCQUFpQixvQkFDdENDLEVBQVMsRUFGVUMsR0FBQSxFQUFBQyxHQUFBLEVBQUFDLE9BQUFDLEVBQUEsSUFHdkIsUUFBQUMsRUFBQUMsRUFBcUJSLEVBQXJCUyxPQUFBQyxjQUFBUCxHQUFBSSxFQUFBQyxFQUFBRyxRQUFBQyxNQUFBVCxHQUFBLEVBQWdDLEtBQXZCVSxFQUF1Qk4sRUFBQTNDLE1BQzVCLEdBQUksVUFBVWtELEtBQUtELEVBQVNFLFdBQ3hCLE1BRUpiLEdBQVVXLEVBQVNHLGNBUEEsTUFBQUMsR0FBQWIsR0FBQSxFQUFBQyxFQUFBWSxFQUFBLGFBQUFkLEdBQUFLLEVBQUFVLFFBQUFWLEVBQUFVLFNBQUEsV0FBQWQsRUFBQSxNQUFBQyxJQVN2QkgsR0FBVWlCLEdBQUcsMkJBQTJCSCxhQUFlLEdBQzFDRyxHQUFHLG1CQUFtQkgsYUFDL0JHLEdBQUcseUJBQXlCckMsTUFBTXNDLFVBQVksZUFBa0JELEdBQUcsbUJBQW1CSCxhQUFlLEVBQUtkLEdBQVUsTUFFcEhpQixHQUFHLHlCQUF5QnJDLE1BQU1zQyxVQUFZLGNBQWdCbEIsRUFBUywyQ0FXbEUsSUFBQTVCLEVBQUFDLEtBQ1Q0QyxHQUFHLGFBQWFFLFFBQVUsV0FFdEJGLEdBQUcsYUFBYTlCLGFBQWEsZ0JBQWdCLEdBRTdDOEIsR0FBRyxhQUFhMUIsY0FBYyxRQUFRNkIsWUFBYyxhQUVwREgsR0FBRyxhQUFhckMsTUFBTUMsTUFBUSxNQUU5Qm9DLEdBQUcsaUJBQWlCRSxRQUFVLFdBQzFCL0MsRUFBS2lELFNBR1RKLEdBQUcsbUJBQW1CckMsTUFBTXNDLFVBQVksa0NBRXhDRCxHQUFHLGlCQUFpQnJDLE1BQU1zQyxVQUFZLG9DQUV0QyxJQUFJSSxJQUVKckMsU0FBU2MsaUJBQWlCLG9CQUFvQndCLFFBQVEsU0FBQUMsR0FDbERBLEVBQUtMLFFBQVUsV0FDWEYsR0FBRywyQkFBMkJKLFVBQVVZLE9BQU8sVUFDL0NwRCxLQUFLd0MsVUFBVWEsSUFBSSxVQUNuQkosRUFBSzFCLDJCQUNMMEIsRUFBS3pCLHVCQUliWixTQUFTYyxpQkFBaUIsV0FBV3dCLFFBQVEsU0FBQUMsR0FDekNBLEVBQUtMLFFBQVUsU0FBVVEsR0FDckJBLEVBQUVDLGtCQUNGdkQsS0FBS3dELFdBQVd0QyxjQUFjLGtCQUFrQnNCLFVBQVVZLE9BQU8sVUFDakVwRCxLQUFLd0MsVUFBVWEsSUFBSSxVQUNuQixJQUFJSSxFQUFhYixHQUFHLDJCQUVoQmEsRUFBV0MscUJBQ1hELEVBQVdqQixVQUFVWSxPQUFPLFVBQzVCSyxFQUFXQyxtQkFBbUJsQixVQUFVYSxJQUFJLFVBQzVDSixFQUFLMUIsMkJBQ0wwQixFQUFLekIscUVBbUJyQixJQUhBLElBQUltQyxFQUFpQmYsR0FBRywyQkFDcEJOLEVBQVdxQixFQUVOdEYsRUFBSSxFQUFHaUUsRUFBVWpFLElBQ3RCaUUsRUFBUy9CLE1BQU1zQyxVQUFZLFVBQVksRUFBUyxHQUFKeEUsR0FBWSxJQUN4RGlFLEVBQVdBLEVBQVNzQix1QkFHeEJ0QixFQUFXcUIsRUFDWCxJQUFLLElBQUl0RixFQUFJLEVBQUdpRSxFQUFVakUsSUFDdEJpRSxFQUFTL0IsTUFBTXNDLFVBQVksVUFBWSxFQUFTLEdBQUp4RSxHQUFZLElBQ3hEaUUsRUFBV0EsRUFBU29CLG1EQVd4QjlDLFNBQVNjLGlCQUFpQixvQkFBb0J3QixRQUFRLFNBQUFDLEdBQ2xEQSxFQUFLakMsY0FBYyxrQkFBa0JzQixVQUFVWSxPQUFPLFVBQ3RERCxFQUFLakMsY0FBYywyQkFBMkJzQixVQUFVYSxJQUFJLFlBRWhFVCxHQUFHLDJCQUEyQkosVUFBVVksT0FBTyxVQUMvQ1IsR0FBRyxrQ0FBa0NKLFVBQVVhLElBQUksVUFDbkRyRCxLQUFLdUIsMkJBQ0x2QixLQUFLd0IsNkJBS2JwRCxFQUFPRCxRQUFVaUQ7Ozs7MkRDL0hqQnlDLE9BQU9qQixHQUFLLFNBQUNrQixHQUNULE9BQU9sRCxTQUFTTSxjQUFjNEMsSUFJbEMsSUFBTUMsRUFBYzlGLHVCQUFRLG1DQUV0QitGLEVBQVUvRixrQkFBUSx1Q0FJbEJnRyxFQUFVLElBQUlGLEVBRUosSUFBSUMsRUFNcEJDLEVBQVFDLGNBSVJ0RCxTQUFTdUQsaUJBQWlCLGFBQWMsV0FDcENGLEVBQVFDLGdCQUdadEQsU0FBU3VELGlCQUFpQixXQUFZLFdBQ2xDRixFQUFRRyxnQkFHWlAsT0FBT1EsT0FBUyxXQUNaSixFQUFRRyIsImZpbGUiOiIuL2phdmFzY3JpcHRzL2FkdmlzZXIuYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGdldDogZ2V0dGVyXG4gXHRcdFx0fSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSBcIi4vY2xpZW50L3NjcmlwdHMvYWR2aXNlci9pbmRleC5qc1wiKTtcbiIsImNsYXNzIExvYWRpbmd7XHJcblxyXG4gICAgc2hvd0xvYWRpbmcoKXtcclxuXHJcbiAgICAgICAgdGhpcy5sb2FkaW5nRWxlbSA9IHRoaXMuX2NyZWF0ZUxvYWRpbmcoKTtcclxuXHJcbiAgICAgICAgdGhpcy5sb2FkaW5nSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKT0+e1xyXG4gICAgICAgICAgICB0aGlzLl9wcm9ncmVzcygpO1xyXG4gICAgICAgIH0sMTAwMClcclxuXHJcbiAgICB9XHJcblxyXG4gICAgaGlkZUxvYWRpbmcoKXtcclxuXHJcbiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmxvYWRpbmdJbnRlcnZhbCk7XHJcblxyXG4gICAgICAgIHRoaXMubG9hZGluZ0VsZW0uc3R5bGUud2lkdGggPSBcIjEwMCVcIjtcclxuXHJcbiAgICAgICAgc2V0VGltZW91dCh0aGlzLl9kaXN0cnVjdExvYWRpbmcsNTAwKTtcclxuXHJcblxyXG4gICAgfVxyXG5cclxuICAgIF9jcmVhdGVMb2FkaW5nKCl7XHJcbiAgICAgICAgbGV0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIilcclxuICAgICAgICBkaXYuc2V0QXR0cmlidXRlKFwiaWRcIixcIm5wcm9ncmVzc1wiKTtcclxuICAgICAgICBkaXYuc3R5bGUud2lkdGggPSBcIjAlXCI7XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkaXYpO1xyXG4gICAgICAgIHJldHVybiBkaXY7XHJcbiAgICB9XHJcblxyXG4gICAgX2Rpc3RydWN0TG9hZGluZygpe1xyXG4gICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNucHJvZ3Jlc3NcIikpO1xyXG4gICAgfVxyXG5cclxuICAgIF9wcm9ncmVzcygpe1xyXG4gICAgICAgIGlmKHBhcnNlSW50KHRoaXMubG9hZGluZ0VsZW0uc3R5bGUud2lkdGgpID49IDk1KXtcclxuICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmxvYWRpbmdJbnRlcnZhbClcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgdGhpcy5sb2FkaW5nRWxlbS5zdHlsZS53aWR0aCA9IHBhcnNlSW50KHRoaXMubG9hZGluZ0VsZW0uc3R5bGUud2lkdGgpICsgNSArIFwiJVwiO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gTG9hZGluZzsiLCJjbGFzcyBBZHZpY2Uge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMuaW5pdEV2ZW50cygpO1xyXG4gICAgICAgIHRoaXMucmVwcmVwYXJlUXVlc3Rpb25zRGVzaWduKCk7XHJcbiAgICAgICAgdGhpcy5yZWRlc2lnblF1ZXN0aW9ucygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiBcclxuICAgICAqIFxyXG4gICAgICovXHJcblxyXG4gICAgcmVwcmVwYXJlUXVlc3Rpb25zRGVzaWduKCkge1xyXG4gICAgICAgIGxldCBxdWVzdGlvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucXVlc3Rpb25XcmFwcGVyJyk7XHJcbiAgICAgICAgbGV0IGhlaWdodCA9IDA7XHJcbiAgICAgICAgZm9yIChsZXQgcXVlc3Rpb24gb2YgcXVlc3Rpb25zKSB7XHJcbiAgICAgICAgICAgIGlmICgvYWN0aXZlL2kudGVzdChxdWVzdGlvbi5jbGFzc0xpc3QpKSB7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBoZWlnaHQgKz0gcXVlc3Rpb24ub2Zmc2V0SGVpZ2h0O1xyXG4gICAgICAgIH1cclxuICAgICAgICBoZWlnaHQgKz0gJCQoJy5xdWVzdGlvbldyYXBwZXIuYWN0aXZlJykub2Zmc2V0SGVpZ2h0IC8gMjtcclxuICAgICAgICBpZiAoaGVpZ2h0IDwgJCQoJy5jaG9vc2VyV3JhcHBlcicpLm9mZnNldEhlaWdodCkge1xyXG4gICAgICAgICAgICAkJCgnLmNob29zZXJTbGlkZXJXcmFwcGVyJykuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZVkoJyArICgoJCQoJy5jaG9vc2VyV3JhcHBlcicpLm9mZnNldEhlaWdodCAvIDIpIC0gaGVpZ2h0KSArICdweCknO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICQkKCcuY2hvb3NlclNsaWRlcldyYXBwZXInKS5zdHlsZS50cmFuc2Zvcm0gPSAndHJhbnNsYXRlWSgnICsgaGVpZ2h0ICsgJ3B4KSc7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFxyXG4gICAgICogXHJcbiAgICAgKiBcclxuICAgICAqL1xyXG5cclxuICAgIGluaXRFdmVudHMoKSB7XHJcbiAgICAgICAgJCQoJy5zdGFydEJ0bicpLm9uY2xpY2sgPSAoKSA9PiB7XHJcblxyXG4gICAgICAgICAgICAkJCgnLnN0YXJ0QnRuJykuc2V0QXR0cmlidXRlKCdkYXRhLXN0YXJ0ZWQnLCB0cnVlKTsgLy8gc28gaXQgaGFzIGJlZW4gY2xpY2tlZCBhdCBsZWFzdCBvbmNlXHJcblxyXG4gICAgICAgICAgICAkJCgnLnN0YXJ0QnRuJykucXVlcnlTZWxlY3Rvcignc3BhbicpLnRleHRDb250ZW50ID0gJ1N0YXJ0IE92ZXInO1xyXG5cclxuICAgICAgICAgICAgJCQoJy5zdGFydEJ0bicpLnN0eWxlLndpZHRoID0gJzUwJSc7XHJcblxyXG4gICAgICAgICAgICAkJCgnLnN0YXJ0V3JhcHBlcicpLm9uY2xpY2sgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlc2V0KCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICQkKCcuY2hvb3NlcldyYXBwZXInKS5zdHlsZS50cmFuc2Zvcm0gPSAndHJhbnNsYXRlWCgwcHgpIHRyYW5zbGF0ZVooMHB4KSc7XHJcblxyXG4gICAgICAgICAgICAkJCgnLnN0YXJ0V3JhcHBlcicpLnN0eWxlLnRyYW5zZm9ybSA9ICdyb3RhdGVZKDQ1ZGVnKSB0cmFuc2xhdGVaKC01MDBweCknO1xyXG5cclxuICAgICAgICAgICAgbGV0IHRoYXQgPSB0aGlzO1xyXG5cclxuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnF1ZXN0aW9uV3JhcHBlcicpLmZvckVhY2goZWxlbSA9PiB7XHJcbiAgICAgICAgICAgICAgICBlbGVtLm9uY2xpY2sgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCQoJy5xdWVzdGlvbldyYXBwZXIuYWN0aXZlJykuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGF0LnJlcHJlcGFyZVF1ZXN0aW9uc0Rlc2lnbigpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoYXQucmVkZXNpZ25RdWVzdGlvbnMoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5vcHRpb24nKS5mb3JFYWNoKGVsZW0gPT4ge1xyXG4gICAgICAgICAgICAgICAgZWxlbS5vbmNsaWNrID0gZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoJy5vcHRpb24uYWN0aXZlJykuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgYWN0aXZlRWxlbSA9ICQkKCcucXVlc3Rpb25XcmFwcGVyLmFjdGl2ZScpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBpZiAoYWN0aXZlRWxlbS5uZXh0RWxlbWVudFNpYmxpbmcpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZlRWxlbS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZlRWxlbS5uZXh0RWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJylcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhhdC5yZXByZXBhcmVRdWVzdGlvbnNEZXNpZ24oKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhhdC5yZWRlc2lnblF1ZXN0aW9ucygpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBcclxuICAgICAqIFxyXG4gICAgICogXHJcbiAgICAgKi9cclxuXHJcbiAgICByZWRlc2lnblF1ZXN0aW9ucygpIHtcclxuICAgICAgICBsZXQgYWN0aXZlUXVlc3Rpb24gPSAkJCgnLnF1ZXN0aW9uV3JhcHBlci5hY3RpdmUnKTtcclxuICAgICAgICBsZXQgcXVlc3Rpb24gPSBhY3RpdmVRdWVzdGlvbjtcclxuICAgICAgICAvLyBsZXQncyBnbyBiYWNrd2FyZFxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBxdWVzdGlvbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHF1ZXN0aW9uLnN0eWxlLnRyYW5zZm9ybSA9ICdzY2FsZSgnICsgKDEgLSAoaSAqIDAuMSkpICsgJyknO1xyXG4gICAgICAgICAgICBxdWVzdGlvbiA9IHF1ZXN0aW9uLnByZXZpb3VzRWxlbWVudFNpYmxpbmc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGxldCdzIGdvIGZvcndhcmRcclxuICAgICAgICBxdWVzdGlvbiA9IGFjdGl2ZVF1ZXN0aW9uO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBxdWVzdGlvbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHF1ZXN0aW9uLnN0eWxlLnRyYW5zZm9ybSA9ICdzY2FsZSgnICsgKDEgLSAoaSAqIDAuMikpICsgJyknO1xyXG4gICAgICAgICAgICBxdWVzdGlvbiA9IHF1ZXN0aW9uLm5leHRFbGVtZW50U2libGluZztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBcclxuICAgICAqIFxyXG4gICAgICogXHJcbiAgICAgKi9cclxuXHJcbiAgICByZXNldCgpIHtcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucXVlc3Rpb25XcmFwcGVyJykuZm9yRWFjaChlbGVtID0+IHtcclxuICAgICAgICAgICAgZWxlbS5xdWVyeVNlbGVjdG9yKCcub3B0aW9uLmFjdGl2ZScpLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICBlbGVtLnF1ZXJ5U2VsZWN0b3IoJy5vcHRpb25bZGF0YS12YWx1ZT1cIjNcIl0nKS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgJCQoJy5xdWVzdGlvbldyYXBwZXIuYWN0aXZlJykuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgJCQoJy5xdWVzdGlvbldyYXBwZXI6Zmlyc3Qtb2YtdHlwZScpLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgICAgIHRoaXMucmVwcmVwYXJlUXVlc3Rpb25zRGVzaWduKCk7XHJcbiAgICAgICAgdGhpcy5yZWRlc2lnblF1ZXN0aW9ucygpO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBBZHZpY2U7Iiwid2luZG93LiQkID0gKHNlbGVjdG9yKSA9PiB7XHJcbiAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XHJcbn1cclxuLy9cclxuXHJcbmNvbnN0IFByb2dyZXNzQmFyID0gcmVxdWlyZSgnLi4vUHJvZ3Jlc3NCYXInKTtcclxuXHJcbmNvbnN0IEFkdmlzZXIgPSByZXF1aXJlKCcuL0FkdmlzZXInKTtcclxuXHJcbi8vXHJcblxyXG5jb25zdCBsb2FkaW5nID0gbmV3IFByb2dyZXNzQmFyKCk7XHJcblxyXG5jb25zdCBhZHZpc2VyID0gbmV3IEFkdmlzZXIoKTtcclxuXHJcbi8vXHJcblxyXG4vLyBzaG93IGxvYWRpbmdcclxuXHJcbmxvYWRpbmcuc2hvd0xvYWRpbmcoKTtcclxuXHJcbi8vIGFkZCBsb2FkaW5nJ3MgZXZlbnRzXHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdwamF4OnN0YXJ0JywgKCkgPT4ge1xyXG4gICAgbG9hZGluZy5zaG93TG9hZGluZygpO1xyXG59KVxyXG5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigncGpheDplbmQnLCAoKSA9PiB7XHJcbiAgICBsb2FkaW5nLmhpZGVMb2FkaW5nKCk7XHJcbn0pXHJcblxyXG53aW5kb3cub25sb2FkID0gKCkgPT4ge1xyXG4gICAgbG9hZGluZy5oaWRlTG9hZGluZygpO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==